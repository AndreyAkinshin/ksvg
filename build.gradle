buildscript {
    ext.kotlin_version = kotlin_version

    repositories {
        jcenter()
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version",
                    "gradle.plugin.com.github.nwillc:vplugin:$vplugin_version"
    }
}

group 'com.github.nwillc'
version '1.0'

apply plugin: 'kotlin'
apply plugin: 'com.github.nwillc.vplugin'

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    testCompile "org.junit.jupiter:junit-jupiter-engine:$jupiter_version",
            "org.junit.platform:junit-platform-runner:$junit_platform_version",
            "org.assertj:assertj-core:$assertj_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes 'Main-Class': 'com.github.nwillc.ksvg.MainKt'
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

test {
    useJUnitPlatform()

    beforeTest { descriptor ->
        logger.lifecycle("\tRunning $descriptor.className.$descriptor.name")
    }

    afterSuite { descriptor, result ->
        if (descriptor.parent == null) {
            logger.lifecycle("\tTests run: $result.testCount, Failures: $result.failedTestCount, Skipped: $result.skippedTestCount")
        }
    }

    testLogging {
        showStandardStreams true
        exceptionFormat "full"
    }
}

